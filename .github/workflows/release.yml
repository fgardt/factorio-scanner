name: release

on:
  push:
    tags:
       - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  release_build:
    name: Build ${{ matrix.platform.os_name }}
    needs: create_release
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-gnu
            bin: scanner.exe
          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: scanner
          - os_name: MacOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            bin: scanner
          - os_name: MacOS-aarch64
            os: macos-latest
            target: aarch64-apple-darwin
            bin: scanner
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Stable rust toolchain
        run: rustup toolchain install stable --target ${{ matrix.platform.target }} --profile minimal
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "rust-stable"
          shared-key: "release_build-${{ matrix.platform.target }}"
      - name: Build
        run: cargo build --target ${{ matrix.platform.target }} --release --package scanner
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
          asset_name: scanner_${{ matrix.platform.target }}
          asset_content_type: application/octet-stream
